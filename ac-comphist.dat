((("setq-default" .
   [0 0 0 0 0 0 0 1 0 0 0 0])
  ("scroll-margin" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("eproject" .
   [0 0 0 1 0 0 0 0])
  ("kill-emacs" .
   [0 0 0 0 0 0 0 1 0 0])
  ("exit-emacs" .
   [0 0 0 0 0 0 0 1 0 0])
  ("desktop-save-mode" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("Configure" .
   [1 0 0 0 0 0 0 0 0])
  ("mode" .
   [1 0 0 0])
  ("omni-key" .
   [0 0 0 0 0 1 0 0])
  ("action" .
   [1 0 0 0 0 0])
  ("binding" .
   [1 0 0 0 0 0 0])
  ("append-suffix" .
   [0 0 0 0 0 0 0 0 2 0 0 0 0])
  ("lambda" .
   [2 0 0 0 0 0])
  ("forward-char" .
   [0 0 0 0 0 0 0 0 0 1 1 0])
  ("forward-page" .
   [0 0 0 0 0 0 1 0 0 0 0 0])
  ("define-key" .
   [0 0 0 0 0 0 0 0 0 2])
  ("make-symbol" .
   [0 0 0 0 0 0 0 0 0 0 2])
  ("org-mode" .
   [2 0 0 0 0 0 0 0])
  ("symbol-name" .
   [0 0 0 0 0 0 0 1 0 2 2])
  ("string" .
   [1 0 0 0 0 0])
  ("ports" .
   [1 0 0 0 0])
  ("gen-sign-vhd" .
   [0 0 0 0 0 0 2 0 0 0 0 0])
  ("get-all-ports" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("re-seq" .
   [0 0 0 0 0 1])
  ("add-vhd-header" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("text" .
   [5 0 0 0])
  ("spit" .
   [3 0 0 0])
  (":name" .
   [1 0 0 0 0])
  ("pieces" .
   [0 0 0 0 0 1])
  ("make-counter" .
   [0 0 0 0 0 0 0 1 0 0 0 0])
  ("create-all-vhdl" .
   [0 0 0 0 0 0 0 0 0 0 2 0 0 0 0])
  (":only" .
   [1 0 0 0 0])
  ("adcs.boolean" .
   [0 0 0 0 0 0 0 1 0 0 0 0])
  ("conjure-ys-formulae" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("conjure-trigger-formulae" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("toVHDL" .
   [1 0 0 0 1 0])
  ("signal-table" .
   [0 0 0 0 1 0 0 1 1 1 0 1])
  ("minimize" .
   [0 0 0 0 0 0 1 0])
  ("q-count" .
   [0 0 0 0 0 1 0])
  ("give-all-qs-upto" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("a" .
   [1])
  ("Formula" .
   [1 0 0 0 0 0 0])
  ("newnodes" .
   [2 0 0 0 0 1 0 0])
  ("flatten" .
   [3 0 0 0 0 0 0])
  ("from" .
   [2 0 0 0])
  ("MooreNode." .
   [1 0 0 0 0 0 0 0 0 0])
  ("helppath" .
   [1 0 0 0 0 0 0 0])
  ("reverse" .
   [0 0 0 0 1 0 0])
  (":mark-to" .
   [3 0 0 0 0 1 0 0])
  (":mark-from" .
   [3 0 0 0 0 1 3 0 0 0])
  ("Current" .
   [0 0 0 0 2 0 0])
  ("count" .
   [0 0 0 0 1])
  ("transpath" .
   [2 0 0 0 0 0 0 1 0])
  ("transient" .
   [0 0 0 0 1 1 0 0 0])
  ("partition" .
   [2 0 0 0 0 0 0 0 1])
  ("mark-to" .
   [3 0 0 0 0 0 0])
  ("curmark" .
   [3 0 0 0 1 1 0])
  ("Markdown/transitToKnown" .
   [0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0])
  ("existing" .
   [2 0 0 0 0 0 0 0])
  (":id-from" .
   [8 0 0 0 1 1 0 0])
  ("Markdown/transitToUnknown" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0])
  ("newname" .
   [3 0 0 0 0 0 0])
  (":id-to" .
   [7 0 0 0 0 0])
  ("recur" .
   [5 0 0 0 0])
  ("update-unknown" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("mapping" .
   [9 0 0 0 0 0 0])
  (":begin" .
   [1 0 0 0 0 0])
  ("get-moore-trans" .
   [0 0 0 0 0 0 0 2 0 0 0 0 0 0 0])
  ("?bang" .
   [1 0 0 0 0])
  ("clause-kw" .
   [1 0 0 0 0 0 0 0 0])
  ("kw-wout-bang" .
   [0 0 0 0 0 2 0 0 0 0 0 0])
  ("bang?" .
   [1 0 0 0 0])
  ("clause-not-kw" .
   [0 0 0 0 1 1 0 0 0 0 0 0 0])
  ("keyword" .
   [0 0 0 0 0 1 2])
  ("clause-id" .
   [0 0 0 0 0 1 0 0 0])
  ("kw-to-name" .
   [0 0 0 0 0 3 2 0 0 0])
  ("this" .
   [3 0 0 0])
  (":tpath" .
   [1 0 0 0 0 0])
  ("path" .
   [2 0 0 0])
  (":endp" .
   [1 0 0 0 0])
  (":signals" .
   [1 0 0 0 0 0 0 1])
  ("concat" .
   [4 0 0 0 1 0])
  ("MooreNode" .
   [0 0 0 0 0 2 2 0 0])
  ("LSANode" .
   [0 0 0 0 0 1 0])
  ("signals" .
   [1 0 0 0 0 0 0])
  ("defrecord" .
   [1 0 0 0 0 0 0 1 0])
  ("ifless-graph" .
   [0 0 0 0 3 0 0 0 0 0 0 0])
  ("rest" .
   [1 0 0 0])
  ("apply" .
   [2 0 0 0 0])
  ("partial" .
   [4 0 0 0 0 0 0])
  ("load-string" .
   [0 0 0 0 0 1 0 0 0 0 0])
  ("import" .
   [0 0 0 0 1 0])
  ("main" .
   [2 0 0 0])
  ("/opt/desura/desura" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("/opt/desura/" .
   [0 0 0 0 0 0 0 1 0 0 0 0])
  ("~/Games/" .
   [0 0 0 1 0 0 0 0])
  ("~/Games/desura/lib/" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("~/Games/desura/" .
   [0 0 0 0 0 0 0 0 0 0 2 0 0 0 0])
  ("eval-after-load" .
   [0 0 0 0 1 0 0 0 0 0 1 0 0 0 0])
  (":import" .
   [1 0 0 0 0 0 0])
  ("Core" .
   [1 0 0 0])
  ("Core/genzeros" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("Class/forName" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("graph-markdown" .
   [0 0 0 0 2 2 0 0 1 0 0 0 0 0])
  ("graph-" .
   [0 0 0 0 0 1])
  (":markdown" .
   [1 0 0 0 1 2 0 0 0])
  ("nnode" .
   [5 0 0 0 0])
  ("known-data" .
   [0 0 0 0 0 0 1 0 0 0])
  ("ClauseNode" .
   [0 0 0 0 1 0 1 0 0 0])
  ("ActionNode" .
   [0 0 0 0 0 1 0 0 0 0])
  (":to-yes" .
   [4 0 0 0 0 0 0])
  (":to-no" .
   [3 0 0 0 0 0])
  ("substitute-connection" .
   [0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("print" .
   [2 0 0 0 0])
  ("where" .
   [3 0 0 0 0])
  ("schart" .
   [7 0 0 0 1 0])
  ("maxlength" .
   [0 0 0 0 1 1 0 0 0])
  ("normalize-markdown" .
   [0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 0])
  ("update-in" .
   [0 0 1 0 0 0 1 1 0])
  ("Markdown" .
   [0 0 0 0 2 1 1 0])
  ("Markdown/genzeros" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("frame" .
   [1 0 0 0 0])
  (":title" .
   [1 0 0 0 0 0])
  (":content" .
   [1 0 0 0 0 0 0 0])
  (":on-close" .
   [0 0 0 0 0 0 1 0 0])
  (":dispose" .
   [1 0 0 0 0 0 0 0])
  ("pack!" .
   [1 0 0 0 0])
  ("show!" .
   [1 0 0 0 0])
  ("testgui" .
   [1 0 0 0 0 0 0])
  ("table" .
   [1 0 0 0 0])
  (":y-signals" .
   [1 0 0 0 0 3 1 0 0 0])
  (":x-signals" .
   [0 0 0 0 1 1 0 0 0 0])
  (":triggers" .
   [1 0 0 0 0 0 1 0 1])
  ("mgraph" .
   [5 0 0 0 1 0])
  ("mline" .
   [3 0 0 0 0])
  ("prepare-to-table" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("vertical-panel" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("grab-all-signals" .
   [0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0])
  ("grab-all-ys" .
   [0 0 0 0 0 0 0 1 0 0 0])
  (":signals-from" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  (":clause" .
   [1 0 0 0 0 0 0])
  ("trigs" .
   [1 0 0 0 0])
  ("qsize" .
   [1 0 0 0 0])
  (".toString" .
   [0 0 0 0 0 0 1 0 0])
  ("clojure.string" .
   [1 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("join" .
   [6 0 0 0])
  ("interpose" .
   [0 0 0 0 0 1 2 0 0])
  ("reduce" .
   [1 0 0 0 0 0])
  ("split-at" .
   [0 0 0 0 0 1 0 0])
  ("split2" .
   [1 0 0 0 0 0])
  ("loop+" .
   [3 0 0 0 0])
  ("binding-list" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("prewalk" .
   [0 0 0 0 0 2 0])
  ("recur+" .
   [2 0 0 0 0 0])
  ("macroexpand" .
   [0 0 0 0 0 1 0 0 0 0 0])
  ("loop-init-map" .
   [0 0 0 0 0 1 0 0 1 0 0 0 0])
  ("gensym" .
   [0 0 0 0 0 1])
  ("inmap" .
   [2 0 0 0 0])
  ("base64Image" .
   [0 0 0 0 0 0 0 1 0 0 0])
  ("load-file" .
   [0 0 0 0 0 0 0 0 1])
  ("require" .
   [2 0 0 0 0 0 0])
  (".exists" .
   [1 0 0 0 0 0 0])
  ("io/file" .
   [0 0 0 0 0 1 0])
  ("keystore-path" .
   [1 0 0 0 0 0 0 0 0 0 0 1 0])
  ("dev-build?" .
   [0 0 0 0 1 0 0 0 0 0])
  ("create-debug-keystore" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("proj" .
   [1 0 0 0])
  ("info" .
   [1 0 0 0])
  ("project" .
   [1 0 0 0 0 0 0])
  ("add-hook" .
   [0 0 0 0 0 0 1 1])
  ("flyspell-mode" .
   [0 0 0 0 0 0 0 0 0 0 0 0 2])
  ("org-mode-hook" .
   [1 0 0 0 0 0 0 0 0 0 1 0 0])
  ("color-theme-sanityinc-tomorrow" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("local-unset-key" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 1 0])
  ("true" .
   [1 0 0 0])
  (":on-click" .
   [0 0 0 0 0 0 0 1 0])
  (".edit" .
   [2 0 0 0 0])
  ("prefs" .
   [8 0 0 0 0])
  (":scheduled" .
   [0 0 0 0 0 1 2 0 0 0])
  ("false" .
   [2 0 0 0 0])
  (".commit" .
   [2 0 0 0 0 0 0])
  ("update-alarm-text" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("like-map" .
   [1 0 0 0 0 0 0 1])
  ("scheduled" .
   [0 0 0 0 0 0 1 0 0])
  ("cancel-alarm" .
   [0 0 0 0 0 0 0 0 1 0 0 0])
  ("alarm-action" .
   [0 0 0 0 0 0 0 1 0 0 0 0])
  ("alarm-intent" .
   [0 0 0 0 0 0 0 0 2 0 0 0])
  ("java.util.Date." .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  (".getHours" .
   [1 0 0 0 0 0 0 0 0])
  ("do-ui" .
   [1 0 0 0 0])
  (".showDialog" .
   [0 0 0 0 0 0 0 0 1 0 0])
  ("dialog" .
   [3 0 0 0 0 0])
  ("update-ui" .
   [1 0 0 0 0 0 0 0 0])
  (".finish" .
   [1 0 0 0 0 0 0])
  ("player" .
   [2 0 0 0 0 0])
  (":refer-clojure" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("graph" .
   [1 0 0 0 0])
  ("map-indexed" .
   [0 0 0 0 1 1 3 0 0 0 0])
  ("identity" .
   [0 0 0 0 0 1 0 0])
  ("dist" .
   [1 0 0 0])
  ("Integer/MAX_VALUE" .
   [0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0])
  ("new-ctx" .
   [1 0 0 0 0 1 0])
  (":errormsg" .
   [1 0 0 0 0 0 0 0 0])
  ("global-" .
   [0 0 0 0 0 0 1])
  ("global-set-key" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("mouse-bs-show" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0])))
